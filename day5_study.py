#함수 정의 및 사용

#입력값이 몇 개일지 모를 때 함수 정의
'''
def 함수이름(*args):
    수행할 문장
    ...
'''

#eg:
'''
def add_many(*args): #2) 넘김
    result = 0 #3) 문장 수행
    for i in args:
        result = result + i
    return result #4) 결과 리턴
ans = add_many(1,2,3) #1) 1,2,3을 인수로 받아서 5) 결과를 ans에 저장
print(ans) #결과 출력
'''

#키워드 파라미터: def 함수 이름(**kwargs):
'''
def print_kwargs(**kwargs):
    print(kwargs)
print_kwargs(a=1,b=2)
#실행 결과 {'a': 1, 'b': 2}
#위의 예제에서 알 수 있듯이 매개변수는 딕셔너리가 되며 모든 key=value 형태의 결과가 딕셔너리에 저장됨
'''

#반환값이 있는 함수의 결과값은 언제나 하나이다? -> 맞음
#   결과값은 튜플 형태로 반환
#   하나의 튜플 값을 2개의 결과값처럼 받고자 한다면
#   -> result1, result2= 함수이름(인수1,인수2) 이런 식으로 쓰면 됨
#   -> 리스트로 접근도 가능
#   return문 두개 설정 불가능
#   함수는 return문을 만나는 순간 결과값을 반환하고 함수를 빠져 나옴
#   -> return을 단독으로 쓰면 함수를 빠져 나올 수 있음 (공프 교과서 161페이지)

#default parameter
#매개변수에 초기값 미리 설정하기(매개변수 초기화)
#함수 정의 시 값을 지정하지 않았을 때 특정 매개변수의 값을 미리 정해둘 수 있음
#맨 마지막 매개변수에만 쓸 수 있음